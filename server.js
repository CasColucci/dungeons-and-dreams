const express = require("express");
const path = require("path");
const http = require("http");
const PORT = process.env.PORT || 3000;
const socketio = require("socket.io");
const app = express();
const server = http.createServer(app);
const io = socketio(server);

// set the static folder
app.use(express.static(path.join(__dirname, "public")));

// start the server
server.listen(PORT, () => console.log(`Server running on port ${PORT}`));

var connections = new Array();

// demo of handling a socket connection request from the client
io.on("connection", (socket) => {});

/*
  - http name and room input, either join room or make a new room
  - GM is designated as the user who makes the room
  - GM needs the ability to create and order the roster. 
    - can be generated by inputing the initiative rolls, but can be edited manually if needed
  - all users see who's turn it is
  - GM gets to iterate through the list forwards and back (back in case they go forward on accident or need to fix something)
  
  extras:
  - include status effects <<< can select specific ones from a list, or have the GM manually write it
  - notes under characters and buffs
  - possible chat and/or reactions
*/
